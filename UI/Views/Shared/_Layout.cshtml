<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - UI</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/UI.styles.css" asp-append-version="true" />
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .navbar-nav .nav-link.active {
            background: #0d6efd;
            color: #fff !important;
            border-radius: 0.25rem;
            font-weight: 600;
        }
        
        /* Language selector styling */
        .form-select {
            border-radius: 0.375rem;
        }
        
        .d-inline-flex .form-select {
            min-width: 120px;
        }
        
        /* Status message styling */
        .spinner-border-sm {
            width: 1rem;
            height: 1rem;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">UI</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark @(ViewContext.RouteData.Values["action"] as string == "Index" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(ViewContext.RouteData.Values["action"] as string == "MyBlocks" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="MyBlocks">My Blocks</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(ViewContext.RouteData.Values["action"] as string == "SharedBlocks" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="SharedBlocks">Shared Blocks</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(ViewContext.RouteData.Values["action"] as string == "StarredBlocks" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="StarredBlocks">
                                Starred
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark @(ViewContext.RouteData.Values["action"] as string == "Privacy" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                    </ul>
                    
                    <!-- User Info Section -->
                    <ul class="navbar-nav">
                        <li class="nav-item" id="userWelcome" style="display: none;">
                            <span class="navbar-text text-muted me-3">
                                <i class="bi bi-person-circle"></i> Welcome, <span id="currentUsername" class="fw-semibold text-dark"></span>
                            </span>
                        </li>
                        <li class="nav-item" id="authButtons">
                            <div class="d-flex gap-2">
                                <button id="loginBtn" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#authModal">
                                    <i class="bi bi-box-arrow-in-right"></i> Login
                                </button>
                                <button id="registerBtn" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#authModal">
                                    <i class="bi bi-person-plus"></i> Register
                                </button>
                            </div>
                        </li>
                        <li class="nav-item" id="logoutSection" style="display: none;">
                            <button id="logoutBtn" class="btn btn-outline-danger btn-sm">
                                <i class="bi bi-box-arrow-right"></i> Logout
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    <!-- Global Authentication Script -->
    <script>
        // Global function to update authentication UI
        function updateAuthUI(isLoggedIn, username = '') {
            const userWelcome = document.getElementById('userWelcome');
            const authButtons = document.getElementById('authButtons');
            const logoutSection = document.getElementById('logoutSection');
            const currentUsername = document.getElementById('currentUsername');
            
            if (isLoggedIn && username) {
                userWelcome.style.display = 'block';
                authButtons.style.display = 'none';
                logoutSection.style.display = 'block';
                currentUsername.textContent = username;
            } else {
                userWelcome.style.display = 'none';
                authButtons.style.display = 'block';
                logoutSection.style.display = 'none';
                currentUsername.textContent = '';
            }
        }
        
        // Function to decode JWT and extract username
        function getUsernameFromToken(token) {
            try {
                const payload = JSON.parse(atob(token.split('.')[1]));
                // The username might be stored in different claims
                return payload.unique_name || payload.sub || payload.name || payload.username || 'User';
            } catch (error) {
                console.error('Error decoding token:', error);
                return 'User';
            }
        }
        
        // Initialize auth UI on page load
        document.addEventListener('DOMContentLoaded', function() {
            const token = localStorage.getItem('token');
            if (token) {
                const username = getUsernameFromToken(token);
                updateAuthUI(true, username);
            } else {
                updateAuthUI(false);
            }
            
            // Setup logout functionality
            const logoutBtn = document.getElementById('logoutBtn');
            if (logoutBtn) {
                logoutBtn.addEventListener('click', function() {
                    localStorage.removeItem('token');
                    updateAuthUI(false);
                    // Reload page to clear any user-specific content
                    window.location.reload();
                });
            }
        });
        
        // Make updateAuthUI globally available for other scripts
        window.updateAuthUI = updateAuthUI;
        window.getUsernameFromToken = getUsernameFromToken;
    </script>
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
